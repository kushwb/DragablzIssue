<dragablz:DragablzWindow
    x:Class="DragablzIssue.TabClient.MyInterTabWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dockablz="http://dragablz.net/winfx/xaml/dockablz"
    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
    xmlns:local="clr-namespace:DragablzIssue.TabClient"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tab="clr-namespace:DragablzIssue.TabClient"
    xmlns:views="clr-namespace:DragablzIssue.Views"
    Title="MyInterTabWindow"
    Width="300"
    Height="300"
    mc:Ignorable="d">
    <dragablz:DragablzWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--<dragablz:InterTabController
                x:Key="InterTabController"
                x:Shared="False"
                InterTabClient="{Binding InterTabClient}" />-->

            <!--<Style x:Key="TabablzControlStyle" TargetType="{x:Type dragablz:TabablzControl}">
                <Setter Property="ShowDefaultAddButton" Value="True" />
                <Setter Property="ShowDefaultCloseButton" Value="True" />
                <Setter Property="AdjacentHeaderItemOffset" Value="-10" />
                <Setter Property="HeaderMemberPath" Value="TabHeader" />
                <Setter Property="InterTabController" Value="{StaticResource InterTabController}" />
                <Setter Property="Margin" Value="0,8,0,0" />
            </Style>-->
        </ResourceDictionary>
    </dragablz:DragablzWindow.Resources>
     <dockablz:Layout Name="RootLayout"
                     FloatingItemHeaderMemberPath="TabHeader"
                     IsFloatDropZoneEnabled="True"
                     FloatingItemsContainerMargin="0 2 0 0">
        <!-- branch template lets dragablz create a new tab control after a window is split via docking -->
        <dockablz:Layout.BranchTemplate>
            <DataTemplate>
                <dragablz:TabablzControl>
                    <dragablz:TabablzControl.InterTabController>
                        <dragablz:InterTabController InterTabClient="{Binding InterTabClient}" />
                    </dragablz:TabablzControl.InterTabController>
                </dragablz:TabablzControl>
            </DataTemplate>
        </dockablz:Layout.BranchTemplate>
        <!-- a root, named tab control is needed, so when a tab is torn and a new window is created, the new target tab control can be identified -->
        <dragablz:TabablzControl x:Name="InitialTabablzControl"
                                 AddLocationHint="After" HeaderMemberPath="TabHeader">
            <dragablz:TabablzControl.ContentTemplate>
                <DataTemplate DataType="{x:Type tab:TabItemBase}">
                <views:PersonView DataContext="{Binding TabContent}" />
            </DataTemplate>                
            </dragablz:TabablzControl.ContentTemplate>
            <dragablz:TabablzControl.InterTabController>
                <dragablz:InterTabController InterTabClient="{Binding InterTabClient}"/>
            </dragablz:TabablzControl.InterTabController>
        </dragablz:TabablzControl>
    </dockablz:Layout>

</dragablz:DragablzWindow>
